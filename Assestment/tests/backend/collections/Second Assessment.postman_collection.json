{
	"info": {
		"_postman_id": "4181cac7-c4c6-4c1c-9632-dc89bdbc603c",
		"name": "Second Assessment",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Tasks",
			"item": [
				{
					"name": "Get active tasks",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"pm.test(\"Valid Response in json format\", function () {",
									"    pm.response.to.not.be.error;",
									"    pm.response.to.be.json;",
									"});",
									"",
									"pm.test(\"Status Code - negative scenario\", function () {",
									"    pm.response.to.have.status(\"No Content\");",
									"});",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/tasks",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"tasks"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create a New Task",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Valid Response in json format\", function () {",
									"    pm.response.to.be.json;",
									"});",
									"",
									"pm.test(\"Status Code - negative scenario\", function () {",
									"    pm.response.to.have.status(\"No Content\");",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"var contentddtt = pm.variables.get(\"contentDDT\");",
									"pm.environment.set(\"taskId\", jsonData.id);",
									"",
									"pm.test(\"Content is \" + contentddtt, function () {",
									"    pm.expect(jsonData.content).to.eql(contentddtt);",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"content-type": true
						}
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "X-Requested-Id",
								"value": "$(uuidgen)",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"content\": \"{{contentDDT}}\",\n\t\"due_string\": \"Ma√±ana 12:00\", \n\t\"due_lang\": \"en\", \n\t\"priority\": 4\n\t\n}\n\n"
						},
						"url": {
							"raw": "{{baseURL}}/tasks",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"tasks"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get an Active Task",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"var taskID = pm.variables.get(\"taskId\");",
									"var contentddtt = pm.variables.get(\"contentDDT\");",
									"var contentname = pm.variables.get(\"content\");",
									"",
									"pm.test(\"Id is \" + taskID, function () {",
									"    pm.expect(jsonData.id).to.eql(jsonData.id,taskID);",
									"});",
									"pm.test(\"Content is \" + contentddtt, function () {",
									"    pm.expect(jsonData.content).to.eql(contentddtt);",
									"});",
									"pm.test(\"Negative Scenario - Content \" + contentname, function () {",
									"    pm.expect(jsonData.content).not.to.be.eql(contentname);",
									"    ",
									"});",
									"",
									"pm.test(\"Status Code - negative scenario\", function () {",
									"    pm.response.to.have.status(\"No Content\");",
									"});",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/tasks/{{taskId}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"tasks",
								"{{taskId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update a task",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status Code - negative scenario\", function () {",
									"    pm.response.to.have.status(\"OK\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"content-type": true
						}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "X-Requested-Id",
								"value": "$(uuidgen)",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"content\": \"{{contentDDT}}\"\n\t\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/tasks/{{taskId}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"tasks",
								"{{taskId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Change a Task status to Complete",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"",
									"",
									"pm.test(\"Status Code - negative scenario\", function () {",
									"    pm.response.to.have.status(\"OK\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseURL}}/tasks/{{taskId}}/close",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"tasks",
								"{{taskId}}",
								"close"
							]
						}
					},
					"response": []
				},
				{
					"name": "Reopen  a Task",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status Code - negative scenario\", function () {",
									"    pm.response.to.have.status(\"OK\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseURL}}/tasks/{{taskId}}/reopen",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"tasks",
								"{{taskId}}",
								"reopen"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete a Task",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status Code - negative scenario\", function () {",
									"    pm.response.to.have.status(\"OK\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/tasks/{{taskId}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"tasks",
								"{{taskId}}"
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "{{token}}",
						"type": "string"
					}
				]
			}
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{token}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"pm.test(\"Status code is 2XX\", function () {",
					"    pm.response.to.be.success;",
					"});",
					"",
					"pm.test(\"Valid Response in less than 500ms\", function () {",
					"    pm.expect(pm.response.responseTime).to.be.below(500);",
					"    pm.response.to.not.be.error;",
					"});"
				]
			}
		}
	]
}